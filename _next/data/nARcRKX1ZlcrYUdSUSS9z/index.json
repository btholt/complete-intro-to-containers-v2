{"pageProps":{"sections":[{"icon":"info-circle","title":"Welcome","slug":"welcome","lessons":[{"slug":"introduction","fullSlug":"/lessons/welcome/introduction","title":"Introduction","order":"01A","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/01-welcome/A-introduction.md","description":"Complete Intro to Containers course by Brian Holt aims to demystify containers, making them accessible to developers regardless of expertise level in JavaScript. The course covers Linux basics, usage on macOS and Windows, emphasizing the importance of containers in modern tech environments."},{"slug":"set-up","fullSlug":"/lessons/welcome/set-up","title":"Set Up","order":"01B","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/01-welcome/B-set-up.md","description":"Learn about Docker Desktop, a convenient desktop app GUI to control Docker on your computer. Follow installation instructions for Windows, macOS, and Linux provided in the document. Understand system requirements, internet usage, and tools used in the course."}],"order":"01"},{"icon":"hand-holding-heart","title":"Crafting Containers by Hand","slug":"crafting-containers-by-hand","lessons":[{"slug":"what-are-containers","fullSlug":"/lessons/crafting-containers-by-hand/what-are-containers","title":"What Are Containers","order":"02A","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/02-crafting-containers-by-hand/A-what-are-containers.md","description":"Understand the simplicity of containers by exploring how they leverage a few Linux kernel features for isolation, contrasting with managing bare metal servers or virtual machines. Discover the advantages and trade-offs associated with each approach, leading to the emergence of containers as a cost-effective and efficient solution for deploying code."},{"slug":"chroot","fullSlug":"/lessons/crafting-containers-by-hand/chroot","title":"chroot","order":"02B","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/02-crafting-containers-by-hand/B-chroot.md","description":"Learn how to use the Linux `chroot` command within containers to set a new root directory, isolating processes for enhanced security. Follow a step-by-step guide to create a new environment, copy necessary libraries, and successfully run commands within the isolated space."},{"slug":"namespaces","fullSlug":"/lessons/crafting-containers-by-hand/namespaces","title":"Namespaces","order":"02C","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/02-crafting-containers-by-hand/C-namespaces.md","description":"Understand the importance of namespaces and cgroups for security and resource management in server environments. Learn how namespaces can isolate processes to enhance security and prevent unauthorized access in shared server environments, beyond what chroot alone provides."},{"slug":"cgroups","fullSlug":"/lessons/crafting-containers-by-hand/cgroups","title":"cgroups","order":"02D","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/02-crafting-containers-by-hand/D-cgroups.md","description":"In the Frontend Masters course \"Complete Intro to Containers\" taught by Brian Holt, participants learn how to manage server resources on high-traffic shopping days like Black Friday. The course introduces cgroups, a technology developed by Google, which safeguards sites from crashes by limiting resource usage per process, ensuring stability and preventing malicious overloads. This essential tool enhances server efficiency and security in shared environments, enabling robust e-commerce operations."}],"order":"02"},{"icon":"fish","title":"Docker","slug":"docker","lessons":[{"slug":"docker-images","fullSlug":"/lessons/docker/docker-images","title":"Docker Images","order":"03A","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/03-docker/A-docker-images.md","description":"Learn how to work with Docker images without Docker by unpacking, exporting, and creating a new isolated environment manually through commands. Understand the core concepts behind Docker such as namespace isolation, cgroups limitation, and chroot environment while exploring functionalities like networking and volumes."},{"slug":"docker-images-with-docker","fullSlug":"/lessons/docker/docker-images-with-docker","title":"Docker Images with Docker","order":"03B","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/03-docker/B-docker-images-with-docker.md","description":"Learn how to use Docker to run and interact with container images like Alpine and Ubuntu, execute commands within containers, manage running containers in the background, and clean up containers efficiently."},{"slug":"javascript-on-docker","fullSlug":"/lessons/docker/javascript-on-docker","title":"Javascript on Docker","order":"03C","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/03-docker/C-javascript-on-docker.md","description":"Learn how to run Node.js, Deno, Bun, and other runtimes in containers using Docker images. Explore different Linux distros like Debian, Alpine, and CoreOS for your containerized applications."},{"slug":"tags","fullSlug":"/lessons/docker/tags","title":"Tags","order":"03D","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/03-docker/D-tags.md","description":"Learn how to manage Docker container versions, from using the latest tag to specifying specific versions for Node.js and exploring Alpine Linux for minimalistic container deployments. Discover the benefits of choosing lightweight Alpine containers over larger Ubuntu or Debian images for faster deployment, reduced storage costs, and enhanced security."},{"slug":"docker-cli","fullSlug":"/lessons/docker/docker-cli","title":"Docker CLI","order":"03E","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/03-docker/E-docker-cli.md","description":"Explore Docker CLI features like pull, push, inspect, and more. Learn how to manage containers efficiently with commands such as pause, unpause, exec, import, export, history, info, top, rm, rmi, logs, restart, and search."}],"order":"03"},{"icon":"file-lines","title":"Dockerfiles","slug":"dockerfiles","lessons":[{"slug":"intro-to-dockerfiles","fullSlug":"/lessons/dockerfiles/intro-to-dockerfiles","title":"Intro to Dockerfiles","order":"04A","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/04-dockerfiles/A-intro-to-dockerfiles.md","description":"Learn how to build Docker containers with a Dockerfile, the key instructions involved, and the concept of disposable containers. Discover the power of creating container images incrementally by leveraging existing images in the Docker ecosystem."},{"slug":"build-a-nodejs-app","fullSlug":"/lessons/dockerfiles/build-a-nodejs-app","title":"Build a Node.js App","order":"04B","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/04-dockerfiles/B-build-a-nodejs-app.md","description":"Learn how to set up a basic Node.js application inside Docker with detailed steps on copying files, exposing ports, and user permissions. Enhance your Dockerfile skills by optimizing file structures and using instructions like COPY, USER, and WORKDIR effectively."},{"slug":"build-a-more-complicated-nodejs-app","fullSlug":"/lessons/dockerfiles/build-a-more-complicated-nodejs-app","title":"Build a More Complicated Node.js App","order":"04C","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/04-dockerfiles/C-build-a-more-complicated-nodejs-app.md","description":"Learn how to containerize a Node.js app using Fastify, npm, and Docker. Follow steps for npm installation, Dockerfile creation, and handling permissions issues within the container."},{"slug":"a-note-on-expose","fullSlug":"/lessons/dockerfiles/a-note-on-expose","title":"A Note on Expose","order":"04D","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/04-dockerfiles/D-a-note-on-expose.md","description":"Understanding the usage and limitations of the `EXPOSE` instruction in Docker, its intended purpose to expose container ports to the host machine, and the optional `-P` flag for mapping ports to random host ports. Considerations include documentation benefits and deliberate port mapping."},{"slug":"layers","fullSlug":"/lessons/dockerfiles/layers","title":"Layers","order":"04E","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/04-dockerfiles/E-layers.md","description":"Learn how Docker optimizes build processes by reusing cached layers and rebuilding only what has changed, like with the COPY instruction. Discover strategies to speed up container-building, such as breaking COPY into multiple instructions for efficient npm ci runs in Node.js applications."}],"order":"04"},{"icon":"minimize","title":"Making Tiny Containers","slug":"making-tiny-containers","lessons":[{"slug":"alpine-linux","fullSlug":"/lessons/making-tiny-containers/alpine-linux","title":"Alpine Linux","order":"05A","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/05-making-tiny-containers/A-alpine-linux.md","description":"Learn how to make your Node.js app container faster, cheaper, and more secure by optimizing its size. Reduce vulnerabilities and hosting costs with tips on minimizing container size using Alpine Linux in Docker."},{"slug":"making-our-own-alpine-nodejs-container","fullSlug":"/lessons/making-tiny-containers/making-our-own-alpine-nodejs-container","title":"Making Our Own Alpine Node.js Container","order":"05B","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/05-making-tiny-containers/B-making-our-own-alpine-nodejs-container.md","description":"Learn how to create a custom Node.js Alpine container by installing system dependencies and setting up a minimal Linux container with Node.js and npm. Explore steps to optimize the container size and user setup, mirroring practices from official containers."},{"slug":"multi-stage-builds","fullSlug":"/lessons/making-tiny-containers/multi-stage-builds","title":"Multi Stage Builds","order":"05C","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/05-making-tiny-containers/C-multi-stage-builds.md","description":"Learn how to optimize Docker images using multistage builds with Node.js and Alpine, reducing container size significantly by eliminating unnecessary dependencies like npm. Follow a tutorial on building a Dockerfile with multiple stages and leveraging Alpine for smaller, more efficient containers."},{"slug":"distroless","fullSlug":"/lessons/making-tiny-containers/distroless","title":"Distroless","order":"05D","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/05-making-tiny-containers/D-distroless.md","description":"Learn about the differences between Alpine and Distroless for Docker containers, focusing on edge cases with Alpine and the stripped-down nature of Distroless. Explore alternative options like Wolfi, Red Hat's Universal Base Image Micro, and Google's Distroless projects, emphasizing security and minimalism."},{"slug":"static-asset-project","fullSlug":"/lessons/making-tiny-containers/static-asset-project","title":"Static Asset Project","order":"05E","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/05-making-tiny-containers/E-static-asset-project.md","description":"Learn how to build a front end website using Astro, React, TypeScript, and Tailwind with step-by-step instructions. Create a multi-stage Dockerfile to build and serve the project with NGINX, simplifying static file serving for your users."}],"order":"05"},{"icon":"box","title":"Docker Features","slug":"docker-features","lessons":[{"slug":"bind-mounts","fullSlug":"/lessons/docker-features/bind-mounts","title":"Bind Mounts","order":"06A","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/06-docker-features/A-bind-mounts.md","description":"Learn about using volumes and bind mounts in Docker containers to handle stateful operations, along with the differences between them. Bind mounts enable flexible file access between the host computer and container, offering a practical solution for testing or development scenarios."},{"slug":"volumes","fullSlug":"/lessons/docker-features/volumes","title":"Volumes","order":"06B","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/06-docker-features/B-volumes.md","description":"Learn about the differences between bind mounts and volumes in Docker, how to persist data using volumes for containers, and create a Node.js app with Docker volumes. Understand the benefits of using volumes over bind mounts in Docker for data persistence and manageability."},{"slug":"dev-containers","fullSlug":"/lessons/docker-features/dev-containers","title":"Dev Containers","order":"06C","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/06-docker-features/C-dev-containers.md","description":"Learn how to use containers to streamline setting up development environments, illustrated with a Ruby on Rails example. Explore the benefits of using Dockerfiles and bind mounts for efficient app development. Discover tools like DevContainer CLI, Visual Studio, IntelliJ, and GitHub Codespaces that support dev containers."},{"slug":"networking-with-docker","fullSlug":"/lessons/docker-features/networking-with-docker","title":"Networking with Docker","order":"06D","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/06-docker-features/D-networking-with-docker.md","description":"Learn how to perform manual networking with Docker, understanding Docker Compose and Kubernetes roles. Explore connecting a Node.js app to a MongoDB database using Docker networks. Discover basic networking concepts within Docker, such as bridge networks, and connect containers through custom networks."}],"order":"06"},{"icon":"boxes-stacked","title":"Multi Container Projects","slug":"multi-container-projects","lessons":[{"slug":"docker-compose","fullSlug":"/lessons/multi-container-projects/docker-compose","title":"Docker Compose","order":"07A","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/07-multi-container-projects/A-docker-compose.md","description":"Learn how to use Docker Compose to coordinate multiple containers for development environments efficiently. Simplify defining relationships between containers using a YAML file, making it easy to manage complex setups with one command. Explore CI/CD integration possibilities and enhance development productivity by leveraging Docker Compose features."},{"slug":"kubernetes","fullSlug":"/lessons/multi-container-projects/kubernetes","title":"Kubernetes","order":"07B","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/07-multi-container-projects/B-kubernetes.md","description":"Learn about containers and Kubernetes, where containers are the building blocks and Kubernetes orchestrates them. Understand fundamental concepts like control planes, nodes, pods, services, and deployments. Explore how to set up Kubernetes using tools like kubectl, minikube, and Docker Desktop for local development."},{"slug":"kompose","fullSlug":"/lessons/multi-container-projects/kompose","title":"Kompose","order":"07C","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/07-multi-container-projects/C-kompose.md","description":"Learn how to use Kompose to convert a docker-compose.yml configuration to Kubernetes, scale services using Kubernetes, set up LoadBalancer for exposing services, and interact with Kubernetes cluster using kubectl. Explore deployment options on Azure AKS, Amazon EKS, and Google GKE."}],"order":"07"},{"icon":"graduation-cap","title":"Wrap Up","slug":"wrap-up","lessons":[{"slug":"docker-alternatives","fullSlug":"/lessons/wrap-up/docker-alternatives","title":"Docker Alternatives","order":"08A","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/08-wrap-up/A-docker-alternatives.md","description":"Explore alternatives to Docker for container building, runtime tools, runtimes, orchestrators, and desktop apps. Learn about tools like Podman, Buildah, containerd, gVisor, OpenShift, Nomad, and more as options in the container ecosystem."},{"slug":"conclusion","fullSlug":"/lessons/wrap-up/conclusion","title":"Conclusion","order":"08B","path":"/home/runner/work/complete-intro-to-containers-v2/complete-intro-to-containers-v2/lessons/08-wrap-up/B-conclusion.md","description":"Congratulations on completing the Complete Intro to Containers, version 2! This course covers containers, Docker, Kubernetes, and related tools, making systems-level concepts approachable. Topics include Dockerfiles, container optimization, networking, Docker Compose, Kubernetes, and more, providing essential knowledge in today's container-driven workflows."}],"order":"08"}]},"__N_SSG":true}